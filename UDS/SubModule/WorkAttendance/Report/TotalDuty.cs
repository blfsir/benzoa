//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace UDS.SubModule.WorkAttendance.Report {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class TotalDuty : DataSet {
        
        private DutyStatDataTable tableDutyStat;
        
        public TotalDuty() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected TotalDuty(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["DutyStat"] != null)) {
                    this.Tables.Add(new DutyStatDataTable(ds.Tables["DutyStat"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DutyStatDataTable DutyStat {
            get {
                return this.tableDutyStat;
            }
        }
        
        public override DataSet Clone() {
            TotalDuty cln = ((TotalDuty)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["DutyStat"] != null)) {
                this.Tables.Add(new DutyStatDataTable(ds.Tables["DutyStat"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableDutyStat = ((DutyStatDataTable)(this.Tables["DutyStat"]));
            if ((this.tableDutyStat != null)) {
                this.tableDutyStat.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "TotalDuty";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/TotalDuty.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableDutyStat = new DutyStatDataTable();
            this.Tables.Add(this.tableDutyStat);
        }
        
        private bool ShouldSerializeDutyStat() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void DutyStatRowChangeEventHandler(object sender, DutyStatRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DutyStatDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnRealName;
            
            private DataColumn columnCommon;
            
            private DataColumn columnLate;
            
            private DataColumn columnEarly;
            
            private DataColumn columnAbsence;
            
            private DataColumn columnPresence;
            
            private DataColumn columnStaff_ID;
            
            internal DutyStatDataTable() : 
                    base("DutyStat") {
                this.InitClass();
            }
            
            internal DutyStatDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn RealNameColumn {
                get {
                    return this.columnRealName;
                }
            }
            
            internal DataColumn CommonColumn {
                get {
                    return this.columnCommon;
                }
            }
            
            internal DataColumn LateColumn {
                get {
                    return this.columnLate;
                }
            }
            
            internal DataColumn EarlyColumn {
                get {
                    return this.columnEarly;
                }
            }
            
            internal DataColumn AbsenceColumn {
                get {
                    return this.columnAbsence;
                }
            }
            
            internal DataColumn PresenceColumn {
                get {
                    return this.columnPresence;
                }
            }
            
            internal DataColumn Staff_IDColumn {
                get {
                    return this.columnStaff_ID;
                }
            }
            
            public DutyStatRow this[int index] {
                get {
                    return ((DutyStatRow)(this.Rows[index]));
                }
            }
            
            public event DutyStatRowChangeEventHandler DutyStatRowChanged;
            
            public event DutyStatRowChangeEventHandler DutyStatRowChanging;
            
            public event DutyStatRowChangeEventHandler DutyStatRowDeleted;
            
            public event DutyStatRowChangeEventHandler DutyStatRowDeleting;
            
            public void AddDutyStatRow(DutyStatRow row) {
                this.Rows.Add(row);
            }
            
            public DutyStatRow AddDutyStatRow(string RealName, int Common, int Late, int Early, int Absence, int Presence, int Staff_ID) {
                DutyStatRow rowDutyStatRow = ((DutyStatRow)(this.NewRow()));
                rowDutyStatRow.ItemArray = new object[] {
                        RealName,
                        Common,
                        Late,
                        Early,
                        Absence,
                        Presence,
                        Staff_ID};
                this.Rows.Add(rowDutyStatRow);
                return rowDutyStatRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                DutyStatDataTable cln = ((DutyStatDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new DutyStatDataTable();
            }
            
            internal void InitVars() {
                this.columnRealName = this.Columns["RealName"];
                this.columnCommon = this.Columns["Common"];
                this.columnLate = this.Columns["Late"];
                this.columnEarly = this.Columns["Early"];
                this.columnAbsence = this.Columns["Absence"];
                this.columnPresence = this.Columns["Presence"];
                this.columnStaff_ID = this.Columns["Staff_ID"];
            }
            
            private void InitClass() {
                this.columnRealName = new DataColumn("RealName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRealName);
                this.columnCommon = new DataColumn("Common", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCommon);
                this.columnLate = new DataColumn("Late", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLate);
                this.columnEarly = new DataColumn("Early", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEarly);
                this.columnAbsence = new DataColumn("Absence", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAbsence);
                this.columnPresence = new DataColumn("Presence", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPresence);
                this.columnStaff_ID = new DataColumn("Staff_ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStaff_ID);
            }
            
            public DutyStatRow NewDutyStatRow() {
                return ((DutyStatRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new DutyStatRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(DutyStatRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DutyStatRowChanged != null)) {
                    this.DutyStatRowChanged(this, new DutyStatRowChangeEvent(((DutyStatRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DutyStatRowChanging != null)) {
                    this.DutyStatRowChanging(this, new DutyStatRowChangeEvent(((DutyStatRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DutyStatRowDeleted != null)) {
                    this.DutyStatRowDeleted(this, new DutyStatRowChangeEvent(((DutyStatRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DutyStatRowDeleting != null)) {
                    this.DutyStatRowDeleting(this, new DutyStatRowChangeEvent(((DutyStatRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveDutyStatRow(DutyStatRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DutyStatRow : DataRow {
            
            private DutyStatDataTable tableDutyStat;
            
            internal DutyStatRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableDutyStat = ((DutyStatDataTable)(this.Table));
            }
            
            public string RealName {
                get {
                    try {
                        return ((string)(this[this.tableDutyStat.RealNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDutyStat.RealNameColumn] = value;
                }
            }
            
            public int Common {
                get {
                    try {
                        return ((int)(this[this.tableDutyStat.CommonColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDutyStat.CommonColumn] = value;
                }
            }
            
            public int Late {
                get {
                    try {
                        return ((int)(this[this.tableDutyStat.LateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDutyStat.LateColumn] = value;
                }
            }
            
            public int Early {
                get {
                    try {
                        return ((int)(this[this.tableDutyStat.EarlyColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDutyStat.EarlyColumn] = value;
                }
            }
            
            public int Absence {
                get {
                    try {
                        return ((int)(this[this.tableDutyStat.AbsenceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDutyStat.AbsenceColumn] = value;
                }
            }
            
            public int Presence {
                get {
                    try {
                        return ((int)(this[this.tableDutyStat.PresenceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDutyStat.PresenceColumn] = value;
                }
            }
            
            public int Staff_ID {
                get {
                    try {
                        return ((int)(this[this.tableDutyStat.Staff_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDutyStat.Staff_IDColumn] = value;
                }
            }
            
            public bool IsRealNameNull() {
                return this.IsNull(this.tableDutyStat.RealNameColumn);
            }
            
            public void SetRealNameNull() {
                this[this.tableDutyStat.RealNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsCommonNull() {
                return this.IsNull(this.tableDutyStat.CommonColumn);
            }
            
            public void SetCommonNull() {
                this[this.tableDutyStat.CommonColumn] = System.Convert.DBNull;
            }
            
            public bool IsLateNull() {
                return this.IsNull(this.tableDutyStat.LateColumn);
            }
            
            public void SetLateNull() {
                this[this.tableDutyStat.LateColumn] = System.Convert.DBNull;
            }
            
            public bool IsEarlyNull() {
                return this.IsNull(this.tableDutyStat.EarlyColumn);
            }
            
            public void SetEarlyNull() {
                this[this.tableDutyStat.EarlyColumn] = System.Convert.DBNull;
            }
            
            public bool IsAbsenceNull() {
                return this.IsNull(this.tableDutyStat.AbsenceColumn);
            }
            
            public void SetAbsenceNull() {
                this[this.tableDutyStat.AbsenceColumn] = System.Convert.DBNull;
            }
            
            public bool IsPresenceNull() {
                return this.IsNull(this.tableDutyStat.PresenceColumn);
            }
            
            public void SetPresenceNull() {
                this[this.tableDutyStat.PresenceColumn] = System.Convert.DBNull;
            }
            
            public bool IsStaff_IDNull() {
                return this.IsNull(this.tableDutyStat.Staff_IDColumn);
            }
            
            public void SetStaff_IDNull() {
                this[this.tableDutyStat.Staff_IDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DutyStatRowChangeEvent : EventArgs {
            
            private DutyStatRow eventRow;
            
            private DataRowAction eventAction;
            
            public DutyStatRowChangeEvent(DutyStatRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public DutyStatRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
